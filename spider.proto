syntax = "proto3";

package spider;
option go_package = "pkg/gRPC";

service SpiderService {
  // Control the crawler
  rpc StartCrawl(CrawlRequest) returns (CrawlResponse) {}
  rpc StopCrawl(StopRequest) returns (StopResponse) {}
  rpc GetCrawlStatus(StatusRequest) returns (StatusResponse) {}
  
  // Search functionality
  rpc Search(SearchRequest) returns (SearchResponse) {}
}

message CrawlRequest {
  repeated string base_urls = 1;
  int32 worker_count = 2;
  int32 task_count = 3;
  int32 max_links_in_page = 4;
  int32 max_depth_crawl = 5;
  bool only_same_domain = 6;
  int32 rate = 7;
}

message CrawlResponse {
  string job_id = 1;
  string status = 2;
}

message StopRequest {
  string job_id = 1;
}

message StopResponse {
  string status = 1;
}

message StatusRequest {
  string job_id = 1;
}

message StatusResponse {
  string status = 1;
  int32 pages_crawled = 2;
}

message SearchRequest {
  string query = 1;
  int32 max_results = 2;
  string job_id = 3;
}

message SearchResponse {
  repeated SearchResult results = 1;
}

message SearchResult {
  string url = 1;
  string description = 2;
  float score = 3;
}